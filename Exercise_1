Чернышева Марина Андреевна ПМ21-6
___
Контрольные вопросы по заданию 1:
1. Рабочий каталог - копия определенной версии проекта, в котором происходит работа/изменение проекта.
2. Репозиторий - файлы, которые находятся в одном проекте.
3. Коммит - информация о внесенных изменениях в проект.
4. Ветка - история коммитов, внесения изменений в проект.
___
Контрольные вопросы по заданию 2:
1. Удаленный репозиторий - репозиторий (файлы проекта), которые доступны через интернет (с помощью системы управления версиями)
2. Где нужно вводить команды git - в терминале, cmd, консоли
3. Для чего нужны ветки в GIT - чтобы вносить изменения в проект, при этом, не нарушать его целостность и была возможность откатить проект на несколько шагов назад, кроме этого, чтобы можно было одновременно нескольким разработчикам работать над одним проектом и вносить изменения.
4. Как возникает конфликты слияния - конфликт слияния возникает в случае, если одна или несколько строк изменены в нескольких ветках одновременно, т.е. несколько разработчиков одновременно изменили одну и ту же часть в проекте.
5. Как разрешить конфликты слияния:
  а) отредактировать конфликтующий файл;
  б) с помощью команды git status -> git log -- merge -> git diff
  в) с помощью git merge --abort (процесс слияния будет прерван, а ветка вернется к состоянию, в котором она находилась до начала) git reset - для разрешения конфликтов
___
Контрольные вопросы по заданию 3:
1. Зачем нужен облачный хостинг репозиториев:
    а) Для хранения своих проектов (сбор портфолио) и в дальнейшем предоставления работодателю;
    б) Для работы с проектом в удаленном формате сразу нескольким разработчикам, чтобы не перессылать репозиторий каждый раз и была возможность работать над проектом всем одновременно, вносить изменения и следить за уже внесенными.
2. Какими основными функциями обладает сайт github.com - возможность организовывать командную работу над проектом, вносить изменения разработчикам параллельно (создать несколько веток, но изменять разные части проекта), делиться своими проектами с другими пользователями в виде портфолио, возможность просмотра внесенных изменений, их откат и возврат к первоначальному репозиторию.
3. Как организовать командную работу над открытым проектом:
  а) Один человек должен создать репозиторий;
  б) После этого он должен дать доступ записи другим членам команды (в настройках репозитория есть раздел "User and grop access"), там добавляется другой пользователь с правами Write, он будет иметь доступ к репозиторию, сможет коммитить и пушить в него;
  в) Каждый подключенный к репозиторию (имеющий доступ) должен будет склонировать репозиторий с помощью команды it clone с указанием git-ссылки на репозиторий
  г) Каждый подключенный к репозиторию разработчик должен создать новую ветку, в которой будет в дальнейшем работать и делать merge request перед слиянием;
---